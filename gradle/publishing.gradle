// Configure maven central publishing independently from ES's default infrastructure.

configure(rootProject) {
  apply plugin: 'maven-publish'
  apply plugin: 'signing'
  apply plugin: 'java-library'

  ext {
    mavenBuildRepo = file("${buildDir}/maven")
  }

  publishing {
    repositories {
      maven {
        name = 'build'
        url = mavenBuildRepo
      }

      maven {
        name = 'sonatype'
        url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
        credentials {
          if (project.hasProperty('nexusUsername')) {
            username project.nexusUsername
          }
          if (project.hasProperty('nexusPassword')) {
            password project.nexusPassword
          }
        }
      }
    }

    plugins.withType(JavaPlugin) {
      // Do not generate gradle metadata files.
      tasks.withType(GenerateModuleMetadata) {
        enabled = false
      }

      // Disable ES POM validation tasks.
      tasks.matching {it.path in [":validateMavenPom", ":validateNebulaPom"]}.all { task ->
        task.enabled = false
      }

      java {
        withSourcesJar()
        withJavadocJar()
      }

      publications {
        maven(MavenPublication) {
          from components.java
          group = project.group
          artifactId = project.archivesBaseName

          // artifact  sourcesJar
          // artifact  javadocJar
          artifact  bundlePlugin

          pom {
            inceptionYear = "2013"
            artifactId 'elasticsearch-carrot2'
            licenses {
              license {
                name = 'The Apache License, Version 2.0'
                url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
              }
            }
            organization {
              name = "Carrot Search s.c."
              url = "https://www.carrotsearch.com"
            }
            developers {
              developer {
                id = 'stanislaw.osinski'
                name = 'Stanisław Osiński'
                email = 'stanislaw.osinski@carrotsearch.com'
              }
              developer {
                id = 'dawid.weiss'
                name = 'Dawid Weiss'
                email = 'dawid.weiss@carrotsearch.com'
              }
            }

            url = 'https://github.com/carrot2/elasticsearch-carrot2'
            scm {
              connection = 'scm:git:https://github.com/carrot2/elasticsearch-carrot2'
              developerConnection = 'scm:git:git@github.com:carrot2/elasticsearch-carrot2.git'
              url = 'https://github.com/carrot2/elasticsearch-carrot2'
            }

            name = esplugin.name
            description = esplugin.description
          }
        }
      }
    }

    signing {
      sign publishing.publications.maven
    }

    task publishToSonatype() {
      group "Publishing"
      description "Publish to SonaType Nexus at ${publishing.repositories.sonatype.url}."

      dependsOn publishMavenPublicationToSonatypeRepository
    }

    task publishToBuild() {
      group "Publishing"
      description "Publish Maven artifacts locally to ${mavenBuildRepo}"

      dependsOn ":publishMavenPublicationToBuildRepository"
    }

    tasks.matching { it.path == ":publishMavenPublicationToBuildRepository" }.all {
      doFirst {
        delete mavenBuildRepo
      }
    }
  }
}
