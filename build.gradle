
buildscript {
  ext {
    version_es = '7.10.0'
    version_c2 = 'org.carrot2:carrot2-core:4.0.4'
  }

  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.elasticsearch.gradle:build-tools:" + version_es
  }
}

plugins {
  id 'java-library'
  id 'idea'
  id 'com.diffplug.gradle.spotless' version "4.5.1" apply false
}

apply plugin: 'elasticsearch.esplugin'
apply plugin: 'elasticsearch.yaml-rest-test'
apply plugin: 'elasticsearch.internal-cluster-test'

apply from: file('gradle/validation/spotless.gradle')

// This plugin's version (typically must match that of ES).
version = '7.10.0'
group = 'org.carrot2'

repositories {
  mavenLocal()
  mavenCentral()
}

ext {
  projectSubstitutions = [:]
  licenseFile = rootProject.file('LICENSE.txt')
  noticeFile = rootProject.file('NOTICE.txt')
  c2version = ""
}

esplugin {
  name 'elasticsearch-carrot2'
  description 'Search results clustering plugin for Elasticsearch (Carrot2)'
  classname 'org.carrot2.elasticsearch.ClusteringPlugin'
}

configurations {
  c2resources
}

// esplugin forces transitive:false on all dependencies
// so list all transitive dependencies individually
dependencies {
  c2resources(version_c2, {
    transitive false
  })

  compile(version_c2, {
    exclude group: "com.carrotsearch", module: "hppc"
  })

  testCompile "com.fasterxml.jackson.core:jackson-core:2.10.4"
  testCompile "com.fasterxml.jackson.core:jackson-annotations:2.10.4"
  testCompile "com.fasterxml.jackson.core:jackson-databind:2.10.4"

  testCompile "org.assertj:assertj-core:3.13.2"
  testCompile "org.elasticsearch.client:transport:" + version_es

  testCompile "org.apache.httpcomponents:httpclient:${versions.httpclient}"
  testCompile "org.apache.httpcomponents:httpcore:${versions.httpcore}"
}

configurations.all { config ->
  resolutionStrategy {
    force "commons-logging:commons-logging:1.2"
  }
}

// Set target compatibility
sourceCompatibility = 11
targetCompatibility = 11

// We don't have unit tests, only integration tests.
test.enabled = false

// logger check does not run on jdk 11 bytecode.
loggerUsageCheck.enabled = false

// Audits
licenseHeaders.enabled = false
dependencyLicenses.enabled = false
thirdPartyAudit.enabled = false

bundlePlugin {
  from({ zipTree(configurations.c2resources.asPath).matching { include "**/*.utf8" } }, {
    eachFile { fcd ->
      fcd.path -= "org/carrot2/language/"
    }
    includeEmptyDirs = false

    into 'config'
  })
}

// Disable POM validation inside ES infrastructure.
tasks.matching {it.path in [":validateMavenPom", ":validateNebulaPom"]}.all { task ->
  task.enabled = false
}

// Configure publishing.
configure(rootProject) {
  apply plugin: 'maven-publish'
  apply plugin: 'signing'

  ext {
    mavenBuildRepo = file("${buildDir}/maven")
  }

  // Do not generate gradle metadata files.
  tasks.withType(GenerateModuleMetadata) {
    enabled = false
  }

  publishing {
    repositories {
      maven {
        name = 'build'
        url = mavenBuildRepo
      }

      maven {
        name = 'sonatype'
        url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
        credentials {
          if (project.hasProperty('nexusUsername')) {
            username project.nexusUsername
          }
          if (project.hasProperty('nexusPassword')) {
            password project.nexusPassword
          }
        }
      }
    }

    publications {
      maven(MavenPublication) {
        from components.java
        group = project.group
        artifactId = project.archivesBaseName

        artifact sourcesJar
        artifact javadocJar
        artifact bundlePlugin

        pom {
          name = esplugin.name
          description = esplugin.description
          // Added automatically by ES plugin.
          // url = 'https://github.com/carrot2/elasticsearch-carrot2'
          inceptionYear = "2013"
          artifactId 'elasticsearch-carrot2'
          licenses {
            license {
              name = 'The Apache License, Version 2.0'
              url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }
          organization {
            name = "Carrot Search s.c."
            url = "https://www.carrotsearch.com"
          }
          developers {
            developer {
              id = 'stanislaw.osinski'
              name = 'Stanisław Osiński'
              email = 'stanislaw.osinski@carrotsearch.com'
            }
            developer {
              id = 'dawid.weiss'
              name = 'Dawid Weiss'
              email = 'dawid.weiss@carrotsearch.com'
            }
          }
          // Added automatically by ES plugin.
          /*
          scm {
            connection = 'scm:git:https://github.com/carrot2/elasticsearch-carrot2'
            developerConnection = 'scm:git:git@github.com:carrot2/elasticsearch-carrot2.git'
            // url = 'https://github.com/carrot2/elasticsearch-carrot2'
          }
           */
        }
      }
    }
  }

  signing {
    sign publishing.publications.maven
  }

  task publishToSonatype() {
    dependsOn publishMavenPublicationToSonatypeRepository
  }

  tasks.matching { it.path == ":publishMavenPublicationToBuildRepository" }.all {
    doFirst {
      delete mavenBuildRepo
    }
  }

  task publishToLocal() {
    group "Publishing"
    description "Publish Maven artifacts locally to " + file(mavenBuildRepo)

    dependsOn ":publishMavenPublicationToBuildRepository"
  }

  task sonatypeBundle(type: Zip) {
    group "Publishing"
    description "Prepare a sonatype bundle archive with all artifacts."

    dependsOn publishToLocal

    archiveFileName = "bundle-${project.archivesBaseName}-${project.version}.zip"
    destinationDirectory = file("${buildDir}/sonatype")

    from(file("${mavenBuildRepo}/org/carrot2/elasticsearch-carrot2/${project.version}"), {
    })
  }
}
