buildscript {
  ext {
    localversions = [
        es : "7.10.2",
        c2 : "4.4.1"
    ]
  }

  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.elasticsearch.gradle:build-tools:${localversions.es}"
  }
}

plugins {
  id 'java-library'
  id 'idea'
  id 'com.diffplug.spotless' version "5.8.2" apply false
}

apply plugin: 'elasticsearch.esplugin'
apply plugin: 'elasticsearch.java-rest-test'
apply plugin: 'elasticsearch.yaml-rest-test'

apply from: file('gradle/validation/spotless.gradle')

// This plugin's version (typically must match that of ES).
// For bugfix releases against the same ES version, you can add a bugfix suffix.
def bugfix = ""
version = "${localversions.es}${bugfix}"
group = 'org.carrot2'

repositories {
  mavenLocal()
  mavenCentral()
}

ext {
  licenseFile = rootProject.file('LICENSE.txt')
  noticeFile = rootProject.file('NOTICE.txt')
}

esplugin {
  name 'elasticsearch-carrot2'
  description "Search results clustering plugin for Elasticsearch ${localversions.es} (Carrot2 ${localversions.c2})"
  classname 'org.carrot2.elasticsearch.ClusteringPlugin'
}

configurations {
  c2resources
}

dependencies {
  c2resources("org.carrot2:carrot2-core:${localversions.c2}", {
    transitive false
  })

  compile("org.carrot2:carrot2-core:${localversions.c2}", {
    exclude group: "com.carrotsearch", module: "hppc"
  })

  testCompile "com.fasterxml.jackson.core:jackson-core:2.10.4"
  testCompile "com.fasterxml.jackson.core:jackson-annotations:2.10.4"
  testCompile "com.fasterxml.jackson.core:jackson-databind:2.10.4"

  testCompile "org.assertj:assertj-core:3.13.2"

  testCompile "org.apache.httpcomponents:httpclient:${versions.httpclient}"
  testCompile "org.apache.httpcomponents:httpcore:${versions.httpcore}"

  // Let the javaRestTest see the classpath of main and tests.
  javaRestTestImplementation project.sourceSets.main.runtimeClasspath
  javaRestTestImplementation project.sourceSets.test.runtimeClasspath

  // TODO: ES 7.10.0 hack: missing log4j classes?
  yamlRestTestImplementation "org.apache.logging.log4j:log4j-core:${versions.log4j}"
}

// Ensure consistency for test dependencies.
configurations.all { config ->
  resolutionStrategy {
    force "commons-logging:commons-logging:${versions.commonslogging}"
  }
}

// Set target compatibility
sourceCompatibility = 11
targetCompatibility = 11

// We don't have unit tests, only integration tests.
test.enabled = false

// Disable security manager for ClusteringActionRestIT
// TODO: rewrite the test somehow?
javaRestTest {
  systemProperty 'tests.security.manager', 'false'
}

// Add plugin configuration files to each testClusters instance.
// 'extraConfigFile' doesn't allow directories, only files, so we
// need to add each individually
testClusters.all {
  fileTree(dir: 'src/main/config').each { file ->
    extraConfigFile 'elasticsearch-carrot2/' + file.name, file
  }
}

// TODO: ES 7.10.0 hack: fails if set to true.
loggerUsageCheck.enabled = false

// Turn off internal ES audits.
licenseHeaders.enabled = false
dependencyLicenses.enabled = false
thirdPartyAudit.enabled = false

// Unpack and bundle the default resources with the plugin.
bundlePlugin {
  from({ zipTree(configurations.c2resources.singleFile).matching { include "**/*.utf8" } }, {
    eachFile { fcd ->
      fcd.path -= "org/carrot2/language/"
    }
    includeEmptyDirs = false
    into 'config'
  })
}

// Configure publishing.
apply from: file('gradle/publishing.gradle')